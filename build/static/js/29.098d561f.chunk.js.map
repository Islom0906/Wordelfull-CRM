{"version":3,"file":"static/js/29.098d561f.chunk.js","mappings":"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","sources":["@crema/core/Form/FormInput.jsx","@crema/core/Form/FormInputNumber.jsx","pages/sample/User/UserPostEdit.jsx"],"sourcesContent":["import React from 'react';\nimport {Form, Input} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInput = ({label,name,required,required_text,warning}) => {\n    return (\n        <Form.Item\n            label={warning ? <div>\n                <p>{label}</p>\n                <br/>\n                <p>{warning}</p>\n            </div>:<div>{label}</div>}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <Input />\n        </Form.Item>\n    );\n};\n\nexport default FormInput;\n\nFormInput.propTypes = {\n    label: PropTypes.string,\n    warning: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import React from 'react';\nimport {Form,  InputNumber} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInputNumber = ({label,name,required,required_text}) => {\n    return (\n        <Form.Item\n            label={label}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <InputNumber style={{width:'100%'}}/>\n        </Form.Item>\n    );\n};\n\nexport default FormInputNumber;\n\nFormInputNumber.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","    import React, {useEffect,  useState} from 'react';\nimport {Button, Col, Form, message, Row,  Upload} from \"antd\";\nimport {useMutation, useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {AppLoader} from \"../../../@crema\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport FormInput from \"../../../@crema/core/Form/FormInput\";\nimport ImgCrop from \"antd-img-crop\";\nimport FormInputNumber from \"../../../@crema/core/Form/FormInputNumber\";\n\n\nconst initialValueForm = {\n    fulName: \"\",\n    phoneNumber: \"\",\n    userName: \"\",\n    password: \"\",\n    imageId:[]\n};\n\n\nconst UserPostEdit = () => {\n\n    const [form] = Form.useForm();\n    const navigate = useNavigate()\n    const {editId} = useSelector(state => state.editData)\n    const dispatch = useDispatch()\n\n\n\n\n    const [fileListProps, setFileListProps] = useState([]);\n\n\n\n\n    // query-image\n    const {\n        mutate: imagesUploadMutate,\n        data: imagesUpload,\n        isLoading: imagesUploadLoading,\n        isSuccess: imagesUploadSuccess,\n    } = useMutation(({url, formData}) => apiService.postData(url, formData), {\n\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj]}`)\n            }\n        }\n    });\n\n    // query-user\n    const {\n        mutate: postUserMutate,\n        data: postUser,\n        isLoading: postUserLoading,\n        isSuccess: postUserSuccess,\n    } = useMutation(({url, data}) => apiService.postData(url, data), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n\n                message.error(`${obj}: ${error.response.data[obj]}`)\n            }\n        }\n    });\n\n    // query-edit\n    const {\n        isLoading: editUserLoading,\n        data: editUserData,\n        refetch: editUserRefetch,\n        isSuccess: editUserSuccess,\n\n    } = useQuery([\"edit-user\", editId], () => apiService.getDataByID(\"/User\", editId), {\n        enabled: false\n    });\n    // put-query\n    const {\n        mutate: putUser,\n        isLoading: putUserLoading,\n        data: putData,\n        isSuccess: putUserSuccess\n    } = useMutation(({\n                         url, data, id\n                     }) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj]}`)\n            }\n        }\n    });\n\n    const {mutate: imagesDeleteMutate} = useMutation(({url, ids}) => apiService.deleteImages(url, ids), {\n        onSuccess: () => message.success('Success'), onError: (error) => message.error(error.message)\n    });\n\n\n    //                                              =====useEffect====\n\n    // user success\n    useEffect(() => {\n        if (putUserSuccess) {\n            dispatch({type: EDIT_DATA, payload: \"\"})\n        }\n        if (postUserSuccess || putUserSuccess) {\n            navigate('/user')\n        }\n    }, [postUser, putData])\n\n    // if edit user\n    useEffect(() => {\n        if (editId !== \"\") {\n            editUserRefetch();\n        }\n    }, [editId]);\n\n    // if no edit user\n    useEffect(() => {\n        if (editId === \"\") {\n            form.setFieldsValue(initialValueForm)\n        }\n    }, []);\n\n\n    //edit user\n    useEffect(() => {\n\n        let imageId = null;\n        if (editUserData !== undefined) {\n                 imageId = [{\n                    uid: editUserData?.image?.id,\n                    name: editUserData?.image?.id,\n                    status: \"done\",\n                    url: `${process.env.REACT_APP_IMAGE_URL}/${editUserData?.image.path}`\n                }]\n\n        }\n\n\n        if (editUserSuccess) {\n\n            const edit = {\n                name: editUserData?.name,\n                userName: editUserData?.userName,\n                password: editUserData?.password,\n                phoneNumber: editUserData?.phoneNumber,\n                fulName: editUserData?.fulName,\n                imageId\n            }\n\n            setFileListProps(imageId)\n            form.setFieldsValue(edit)\n        }\n\n    }, [editUserData])\n    const onFinish = (values) => {\n\n\n\n        const data = {\n            userName: values.userName,\n            password: values.password,\n            phoneNumber: values.phoneNumber,\n            fulName: values.fulName,\n            imageId:fileListProps[0] ? fileListProps[0]?.uid :1\n        };\n        if (editUserSuccess) {\n            putUser({url: `/User`, data,id:editId});\n        } else {\n            postUserMutate({url: \"/User/\", data});\n        }\n    }\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    // refresh page again get data\n\n    useEffect(() => {\n        const storedValues = JSON.parse(localStorage.getItem('myFormValues'));\n        if (storedValues) {\n            storedValues.images = []\n            form.setFieldsValue(storedValues);\n        }\n\n        const handleBeforeUnload = () => {\n\n            localStorage.setItem('myFormValues', JSON.stringify(form.getFieldsValue()),);\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            localStorage.removeItem('editDataId')\n            localStorage.removeItem('myFormValues')\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        }\n    }, []);\n\n    // image\n    useEffect(() => {\n        if (imagesUploadSuccess) {\n            const uploadImg = [{\n                uid: imagesUpload?.id,\n                name: imagesUpload?.id,\n                status: \"done\",\n                url: `${process.env.REACT_APP_IMAGE_URL}/${imagesUpload?.path}`\n            }]\n            form.setFieldsValue({imageId: uploadImg});\n            setFileListProps(uploadImg);\n        }\n    }, [imagesUpload]);\n\n    const onChangeImage = ({fileList: newFileList}) => {\n\n        const formData = new FormData();\n        if (newFileList.length !== 0) {\n            formData.append(\"fromFile\", newFileList[0].originFileObj);\n            imagesUploadMutate({url: \"/Image/\", formData});\n        }\n\n    };\n\n    const handleRemoveImage = (file) => {\n        const ids =  file?.uid\n        imagesDeleteMutate({url: `/Image/${ids}`});\n        form.setFieldsValue({imageId: []});\n        setFileListProps([])\n\n    }\n\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow?.document.write(image.outerHTML);\n    };\n\n\n\n\n\n    return (<div>\n        {(postUserLoading || editUserLoading || putUserLoading||imagesUploadLoading) ? <AppLoader/> :\n            <Form\n                form={form}\n                name=\"basic\"\n                labelCol={{\n                    span: 24\n                }}\n                wrapperCol={{\n                    span: 24\n                }}\n                style={{\n                    maxWidth: \"100%\"\n                }}\n                initialValues={initialValueForm}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n\n\n                <Row gutter={20}>\n\n                    <Col span={12}>\n                        <FormInput\n                            required={true}\n                            required_text={'Требуется полное имя'}\n                            label={'Полное имя'}\n                            name={'fulName'}\n                        />\n                    </Col>\n                    <Col span={12}>\n                        <FormInputNumber\n                            required={true}\n                            required_text={'Требуется номер телефона'}\n                            label={'Номер телефона'}\n                            name={'phoneNumber'}\n                        />\n                    </Col>\n                    <Col span={12}>\n                        <FormInput\n                            required={true}\n                            required_text={'Требуется login'}\n                            label={'Login'}\n                            name={'userName'}\n                        />\n                    </Col>\n                    <Col span={12}>\n                        <FormInput\n                            required={true}\n                            required_text={'Требуется пароль'}\n                            label={'Пароль'}\n                            name={'password'}\n                        />\n                    </Col>\n                </Row>\n\n                <Row gutter={20}>\n                    <Col span={12}>\n                        <Form.Item\n                            label='Изображение пользователя'\n                            name={'imageId'}>\n                            <ImgCrop>\n                                <Upload\n                                    maxCount={1}\n                                    fileList={fileListProps}\n                                    listType='picture-card'\n                                    onChange={onChangeImage}\n                                    onPreview={onPreview}\n                                    onRemove={handleRemoveImage}\n                                    beforeUpload={() => false}\n                                >\n                                    {fileListProps.length > 0 ? \"\" : \"Upload\"}\n                                </Upload>\n                            </ImgCrop>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n\n                <Button type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"20px\"}}>\n                    {editUserSuccess ? 'Изменить' : 'Создать'}\n                </Button>\n            </Form>}\n    </div>);\n};\n\nexport default UserPostEdit;"],"names":["_ref","label","name","required","required_text","warning","_jsx","Form","Item","_jsxs","children","rules","message","Input","InputNumber","style","width","initialValueForm","fulName","phoneNumber","userName","password","imageId","UserPostEdit","form","useForm","navigate","useNavigate","editId","useSelector","state","editData","dispatch","useDispatch","fileListProps","setFileListProps","useState","mutate","imagesUploadMutate","data","imagesUpload","isLoading","imagesUploadLoading","isSuccess","imagesUploadSuccess","useMutation","url","formData","apiService","postData","onSuccess","success","onError","error","obj","response","concat","postUserMutate","postUser","postUserLoading","postUserSuccess","_ref2","editUserLoading","editUserData","refetch","editUserRefetch","editUserSuccess","useQuery","getDataByID","enabled","putUser","putUserLoading","putData","putUserSuccess","_ref3","id","imagesDeleteMutate","_ref4","ids","deleteImages","useEffect","type","EDIT_DATA","payload","setFieldsValue","_editUserData$image","_editUserData$image2","undefined","uid","image","status","process","path","edit","storedValues","JSON","parse","localStorage","getItem","images","handleBeforeUnload","setItem","stringify","getFieldsValue","window","addEventListener","removeItem","removeEventListener","uploadImg","AppLoader","labelCol","span","wrapperCol","maxWidth","initialValues","onFinish","values","_fileListProps$","onFinishFailed","errorInfo","console","log","autoComplete","Row","gutter","Col","FormInput","FormInputNumber","ImgCrop","Upload","maxCount","fileList","listType","onChange","_ref5","newFileList","FormData","length","append","originFileObj","onPreview","async","src","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","result","Image","imgWindow","open","document","write","outerHTML","onRemove","beforeUpload","Button","htmlType","marginTop"],"sourceRoot":""}