{"version":3,"file":"static/js/334.bb752966.chunk.js","mappings":"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","sources":["@crema/core/Form/FormInput.jsx","pages/sample/Course/CourseTable.jsx","pages/sample/Course/index.jsx"],"sourcesContent":["import React from 'react';\nimport {Form, Input} from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst FormInput = ({label,name,required,required_text,warning}) => {\n    return (\n        <Form.Item\n            label={warning ? <div>\n                <p>{label}</p>\n                <br/>\n                <p>{warning}</p>\n            </div>:<div>{label}</div>}\n            name={name}\n\n            rules={[{\n                required: required, message: required_text\n            }]}\n        >\n            <Input />\n        </Form.Item>\n    );\n};\n\nexport default FormInput;\n\nFormInput.propTypes = {\n    label: PropTypes.string,\n    warning: PropTypes.string,\n    name: PropTypes.any,\n    required: PropTypes.bool,\n    required_text:PropTypes.string\n};","import {Button, Col, Form, message, Modal, Row,  Space, Table} from \"antd\";\nimport {EditOutlined} from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport {AppLoader} from \"../../../@crema\";\nimport React, {useEffect,  useState} from \"react\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {useMutation} from \"react-query\";\nimport FormInput from \"../../../@crema/core/Form/FormInput\";\n\nconst initialValueForm = {\n    title_uz: \"\",\n    title_ru: \"\",\n    sub_category: [],\n};\n\nconst CourseTable = ({data, refetch}) => {\n    const [form] = Form.useForm();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [editId, setEditId] = useState(null)\n\n\n    const {\n        mutate: editStatusMutate,\n        data: editStatus,\n        isLoading: editStatusLoading,\n        isSuccess: editStatusSuccess,\n    } = useMutation(({url, data, id}) => apiService.editData(url, data, id), {\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n            for (let obj in error.response.data) {\n                message.error(`${obj}: ${error.response.data[obj][0]}`)\n            }\n        }\n    });\n\n    const Edit = (id) => {\n        setIsModalOpen(true)\n        setEditId(id)\n    };\n\n\n    const onFinish = (values) => {\n        editStatusMutate({url: \"/Kurs\", data: values, id: editId});\n    }\n    const handleOk = () => {\n        form\n            .validateFields()\n            .then((values) => {\n                onFinish(values);\n            })\n            .catch((errorInfo) => {\n                console.log('Failed:', errorInfo);\n            });\n    };\n\n    const handleCancel = () => {\n        setIsModalOpen(false);\n    };\n\n    useEffect(() => {\n        if (editStatusSuccess) {\n            setIsModalOpen(false)\n            form.setFieldsValue(initialValueForm)\n            refetch()\n        }\n    }, [editStatus]);\n\n\n\n\n    const columns = [\n        {\n            title: 'Цена',\n            dataIndex: 'price',\n            id: 'price',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Событие',\n            id: 'action',\n            render: (_, record) => (\n                <Space size={20}>\n                    <Button\n                        onClick={() => Edit(record.id)}\n                        type='primary'\n                        icon={<EditOutlined/>}>\n                        Edit Status\n                    </Button>\n\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <div>\n            <Modal title=\"Изменить курс\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n                {(editStatusLoading) ?\n                    <AppLoader/> :\n                    <Form\n                        form={form}\n                        name=\"basic\"\n                        labelCol={{\n                            span: 24\n                        }}\n                        wrapperCol={{\n                            span: 24\n                        }}\n                        style={{\n                            maxWidth: \"100%\"\n                        }}\n                        initialValues={initialValueForm}\n                        onFinish={onFinish}\n                        autoComplete=\"off\"\n                    >\n                        <Row gutter={20}>\n                            <Col span={24}>\n                                <FormInput\n                                    required={true}\n                                    required_text={'Требуется курс'}\n                                    label={'Курс'}\n                                    name={'price'}\n                                />\n                            </Col>\n                        </Row>\n\n\n                    </Form>\n                }\n            </Modal>\n            <Table\n                columns={columns}\n                dataSource={data}\n                rowKey={(record) => record?.id}\n            />\n        </div>\n    );\n};\n\nCourseTable.propTypes = {\n    data: PropTypes.array,\n    refetch: PropTypes.func\n}\n\nexport default CourseTable;","import CourseTable from './CourseTable';\nimport {message,  Space, Spin} from 'antd';\nimport apiService from '../../../@crema/services/apis/api';\nimport { useQuery} from 'react-query';\n\nconst Index = () => {\n\n  const {\n    data,\n    isLoading: getLoading,\n    refetch,\n  } = useQuery('course-get', () => apiService.getDataByID('/Kurs',1), {\n    // enabled:false,\n    onError: (error) => {\n      message.error(error.message);\n      // Handle the error\n    },\n  });\n\n\n\n\n\n\n\n\n\n  return (\n      <div className={'site-space-compact-wrapper'}>\n        <Space direction={'vertical'} style={{width: '100%'}}>\n          <Spin\n              size='medium'\n              spinning={getLoading }>\n            <CourseTable\n                data={ [data]}\n                refetch={refetch}\n            />\n          </Spin>\n        </Space>\n      </div>\n  );\n};\n\nexport default Index;\n"],"names":["_ref","label","name","required","required_text","warning","_jsx","Form","Item","_jsxs","children","rules","message","Input","initialValueForm","title_uz","title_ru","sub_category","data","refetch","form","useForm","isModalOpen","setIsModalOpen","useState","editId","setEditId","mutate","editStatusMutate","editStatus","isLoading","editStatusLoading","isSuccess","editStatusSuccess","useMutation","_ref2","url","id","apiService","editData","onSuccess","success","onError","error","obj","response","concat","onFinish","values","useEffect","setFieldsValue","columns","title","dataIndex","render","text","_","record","Space","size","Button","onClick","Edit","type","icon","EditOutlined","Modal","open","onOk","handleOk","validateFields","then","catch","errorInfo","console","log","onCancel","handleCancel","AppLoader","labelCol","span","wrapperCol","style","maxWidth","initialValues","autoComplete","Row","gutter","Col","FormInput","Table","dataSource","rowKey","Index","getLoading","useQuery","getDataByID","className","direction","width","Spin","spinning","CourseTable"],"sourceRoot":""}