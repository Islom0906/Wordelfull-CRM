{"version":3,"file":"static/js/204.6fb7e509.chunk.js","mappings":"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","sources":["pages/sample/User/UserTable.jsx","pages/sample/User/index.jsx"],"sourcesContent":["import {Button, Popconfirm, Space, Table, Image, Tag} from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport {useDispatch} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst UserTable = ({data,deleteHandle}) => {\n    const dispatch=useDispatch()\n    const navigate =useNavigate()\n    const Delete = async (id) => {\n        deleteHandle('/User',id)\n    };\n\n\n    const Edit = (id) => {\n        localStorage.setItem('editDataId',id)\n        dispatch({type:EDIT_DATA,payload:id})\n        navigate('/user/add')\n    };\n    const columns = [\n        {\n            title: 'Изображение',\n            dataIndex: 'image',\n            id: 'image',\n            render: (image) => {\n                return (\n                    <Image\n                        width={50}\n\n                        src={`${process.env.REACT_APP_IMAGE_URL}/${image?.path}`}\n                    />\n                )},\n        },\n        {\n            title: 'Полное имя',\n            dataIndex: 'fulName',\n            id: 'fulName',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Номер телефона',\n            dataIndex: 'phoneNumber',\n            id: 'phoneNumber',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Login',\n            dataIndex: 'userName',\n            id: 'userName',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Роль',\n            dataIndex: 'role',\n            id: 'role',\n            render: (text) => <Tag>{text===1?\"Админ\":\"Продавец\"}</Tag>,\n        },\n        {\n            title: 'Action',\n            id: 'action',\n            render: (_, record) => (\n                <Space size={20}>\n                    <Button\n                        onClick={() => Edit(record.id)}\n                        type='primary'\n                        icon={<EditOutlined />}>\n                        Edit\n                    </Button>\n                    <Popconfirm\n                        title={'Are you sure to delete this task?'}\n                        description={'Delete the task '}\n                        onConfirm={() => Delete(record.id)}>\n                        <Button type='danger' icon={<DeleteOutlined />}>\n                            Delete\n                        </Button>\n                    </Popconfirm>\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <div>\n            <Table\n                columns={columns}\n                dataSource={data}\n                rowKey={(record) => record.id}\n            />\n        </div>\n    );\n};\n\n\n\nUserTable.propTypes={\n    data:PropTypes.array,\n    deleteHandle:PropTypes.func\n}\n\nexport default UserTable;","import React, {useEffect, useState} from 'react';\nimport UserTable from './UserTable';\nimport {Button, Col, Input, message, Row, Space, Spin} from 'antd';\nimport {PlusOutlined} from '@ant-design/icons';\nimport {useNavigate} from 'react-router-dom';\nimport apiService from '../../../@crema/services/apis/api';\nimport {useMutation, useQuery} from 'react-query';\nimport {EDIT_DATA} from '../../../shared/constants/ActionTypes';\nimport {useDispatch} from 'react-redux';\n\nconst Index = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const {\n        mutate,\n        isSuccess,\n        isLoading: deleteNewsLoading,\n    } = useMutation(({url, id}) => apiService.deleteData(url, id),{\n        onSuccess: () => {\n\n            message.success('Success')\n        },\n        onError: (error) => {\n\n            message.error(error.message);\n            // Handle the error\n        },\n    });\n    const {\n        data,\n        isLoading: getNewsLoading,\n        refetch,\n    } = useQuery('user-get', () => apiService.getData('/User'), {\n        // enabled:false,\n        onError: (error) => {\n\n            message.error(error.message);\n            // Handle the error\n        },\n    });\n    const [search, setSearch] = useState([]);\n    const [isSearch, setIsSearch] = useState(false);\n    const deleteHandle = (url, id) => {\n        mutate({url, id});\n    };\n\n    useEffect(() => {\n        if (isSuccess) {\n            refetch();\n        }\n    }, [isSuccess]);\n\n    const addArticle = () => {\n        dispatch({type: EDIT_DATA, payload: ''});\n        navigate('/user/add');\n    };\n    const serachFunc = (value) => {\n        if (value === '') {\n            setIsSearch(false);\n        } else {\n            setIsSearch(true);\n        }\n\n        const filterData = data?.result?.filter(\n            (data) =>\n                data.fulName.toLowerCase().includes(value.toLowerCase()));\n        setSearch(filterData);\n    };\n\n    return (\n        <div className={'site-space-compact-wrapper'}>\n            <Space direction={'vertical'} style={{width: '100%'}}>\n                <Row gutter={20}>\n                    <Col span={16}>\n                        <Input onChange={(e) => serachFunc(e.target.value)}/>\n                    </Col>\n                    <Col span={8}>\n                        <Button\n                            type='primary'\n                            icon={<PlusOutlined/>}\n                            style={{width: '100%'}}\n                            onClick={addArticle}>\n                            Add\n                        </Button>\n                    </Col>\n                </Row>\n                <Spin\n                    size='medium'\n                    spinning={getNewsLoading || deleteNewsLoading}>\n                    <UserTable\n                        data={isSearch ? search : data?.result}\n                        deleteHandle={deleteHandle}\n                    />\n                </Spin>\n            </Space>\n        </div>\n    );\n};\n\nexport default Index;\n"],"names":["_ref","data","deleteHandle","dispatch","useDispatch","navigate","useNavigate","columns","title","dataIndex","id","render","image","_jsx","Image","width","src","concat","process","path","text","children","Tag","_","record","_jsxs","Space","size","Button","onClick","Edit","localStorage","setItem","type","EDIT_DATA","payload","icon","EditOutlined","Popconfirm","description","onConfirm","async","Delete","DeleteOutlined","Table","dataSource","rowKey","Index","mutate","isSuccess","isLoading","deleteNewsLoading","useMutation","url","apiService","deleteData","onSuccess","message","success","onError","error","getNewsLoading","refetch","useQuery","getData","search","setSearch","useState","isSearch","setIsSearch","useEffect","className","direction","style","Row","gutter","Col","span","Input","onChange","e","value","_data$result","filterData","result","filter","fulName","toLowerCase","includes","serachFunc","target","PlusOutlined","addArticle","Spin","spinning","UserTable"],"sourceRoot":""}