{"version":3,"file":"static/js/790.11a24dd1.chunk.js","mappings":"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","sources":["pages/sample/Apartment/ApartmentTable.jsx","pages/sample/Apartment/index.jsx"],"sourcesContent":["import {Button, Popconfirm, Space, Table, Image, Tag} from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport {useDispatch} from \"react-redux\";\nimport {EDIT_DATA} from \"../../../shared/constants/ActionTypes\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst ApartmentTable = ({data,deleteHandle}) => {\n    const dispatch=useDispatch()\n    const navigate =useNavigate()\n    const Delete = async (id) => {\n        deleteHandle('/Apartment',id)\n    };\n\n\n    const Edit = (id) => {\n        localStorage.setItem('editDataId',id)\n        dispatch({type:EDIT_DATA,payload:id})\n        navigate('/apartment/add')\n    };\n    const columns = [\n        {\n            title: 'Имя',\n            dataIndex: 'name',\n            id: 'name',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Площадь',\n            dataIndex: 'size',\n            id: 'size',\n            render: (text) => <p>{text}м²</p>,\n        },\n        {\n            title: 'Количество номеров',\n            dataIndex: 'roomCount',\n            id: 'roomCount',\n            render: (text) => <p>{text}</p>,\n        },\n        {\n            title: 'Стоимость номера',\n            dataIndex: 'price',\n            id: 'price',\n            render: (text) => <p>{text}$</p>,\n        },\n        {\n            title: 'Состояние номера',\n            dataIndex: 'status',\n            id: 'status',\n            render: (text) => <Tag color={text===0?\"#0232f6\":text===1 ?\"#f5c306\" :\"#ff0000\"}>{text===0?\"Empty\":text===1 ?\"Busied\" :\"Buyed\"}</Tag>,\n        },\n        {\n            title: 'Изображение комнаты',\n            dataIndex: 'homeImage',\n            id: 'homeImage',\n            render: (image) => {\n                return (\n                    <Image\n                        width={50}\n\n                        src={`${process.env.REACT_APP_IMAGE_URL}/${image?.path}`}\n                    />\n                )},\n        },\n        {\n            title: 'Action',\n            id: 'action',\n            render: (_, record) => (\n                <Space size={20}>\n                    <Button\n                        onClick={() => Edit(record.id)}\n                        type='primary'\n                        icon={<EditOutlined />}>\n                        Edit\n                    </Button>\n                    <Popconfirm\n                        title={'Are you sure to delete this task?'}\n                        description={'Delete the task '}\n                        onConfirm={() => Delete(record.id)}>\n                        <Button type='danger' icon={<DeleteOutlined />}>\n                            Delete\n                        </Button>\n                    </Popconfirm>\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <div>\n            <Table\n                columns={columns}\n                dataSource={data}\n                rowKey={(record) => record.id}\n            />\n        </div>\n    );\n};\n\n\n\nApartmentTable.propTypes={\n    data:PropTypes.array,\n    deleteHandle:PropTypes.func\n}\n\nexport default ApartmentTable;","import React, {useEffect, useState} from 'react';\nimport ApartmentTable from './ApartmentTable';\nimport {Button, Col, Input, message, Row, Space, Spin} from 'antd';\nimport {PlusOutlined} from '@ant-design/icons';\nimport {useNavigate} from 'react-router-dom';\nimport apiService from '../../../@crema/services/apis/api';\nimport {useMutation, useQuery} from 'react-query';\nimport {EDIT_DATA} from '../../../shared/constants/ActionTypes';\nimport {useDispatch} from 'react-redux';\n\nconst Index = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    mutate,\n    isSuccess,\n    isLoading: deleteNewsLoading,\n  } = useMutation(({url, id}) => apiService.deleteData(url, id),{\n    onSuccess: () => {\n\n      message.success('Success')\n    },\n    onError: (error) => {\n\n      message.error(error.message);\n      // Handle the error\n    },\n  });\n  const {\n    data,\n    isLoading: getNewsLoading,\n    refetch,\n  } = useQuery('apartment-get', () => apiService.getData('/Apartment'), {\n    // enabled:false,\n    onError: (error) => {\n\n      message.error(error.message);\n      // Handle the error\n    },\n  });\n  const [search, setSearch] = useState([]);\n  const [isSearch, setIsSearch] = useState(false);\n  const deleteHandle = (url, id) => {\n    mutate({url, id});\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      refetch();\n    }\n  }, [isSuccess]);\n\n  const addArticle = () => {\n    dispatch({type: EDIT_DATA, payload: ''});\n    navigate('/apartment/add');\n  };\n  const serachFunc = (value) => {\n    if (value === '') {\n      setIsSearch(false);\n    } else {\n      setIsSearch(true);\n    }\n\n    const filterData = data?.item1?.filter(\n        (data) =>\n            data.name.toLowerCase().includes(value.toLowerCase()));\n    setSearch(filterData);\n  };\n\n  return (\n      <div className={'site-space-compact-wrapper'}>\n        <Space direction={'vertical'} style={{width: '100%'}}>\n          <Row gutter={20}>\n            <Col span={16}>\n              <Input onChange={(e) => serachFunc(e.target.value)} />\n            </Col>\n            <Col span={8}>\n              <Button\n                  type='primary'\n                  icon={<PlusOutlined />}\n                  style={{width: '100%'}}\n                  onClick={addArticle}>\n                Add\n              </Button>\n            </Col>\n          </Row>\n          <Spin\n              size='medium'\n              spinning={getNewsLoading || deleteNewsLoading}>\n            <ApartmentTable\n                data={isSearch ? search : data?.item1}\n                deleteHandle={deleteHandle}\n            />\n          </Spin>\n        </Space>\n      </div>\n  );\n};\n\nexport default Index;\n"],"names":["_ref","data","deleteHandle","dispatch","useDispatch","navigate","useNavigate","columns","title","dataIndex","id","render","text","_jsx","children","_jsxs","Tag","color","image","Image","width","src","concat","process","path","_","record","Space","size","Button","onClick","Edit","localStorage","setItem","type","EDIT_DATA","payload","icon","EditOutlined","Popconfirm","description","onConfirm","async","Delete","DeleteOutlined","Table","dataSource","rowKey","Index","mutate","isSuccess","isLoading","deleteNewsLoading","useMutation","url","apiService","deleteData","onSuccess","message","success","onError","error","getNewsLoading","refetch","useQuery","getData","search","setSearch","useState","isSearch","setIsSearch","useEffect","className","direction","style","Row","gutter","Col","span","Input","onChange","e","value","_data$item","filterData","item1","filter","name","toLowerCase","includes","serachFunc","target","PlusOutlined","addArticle","Spin","spinning","ApartmentTable"],"sourceRoot":""}